<script>
    {#
       拡張クラスへのJS
    #}
    $(function() {
        $ex_thumb = $(".ex_thumb");

        {# 関数系 #}
        var hideSvg = function ($thumbs) {
            $.each($thumbs, function (i, thumb) {
                var $thumb = $(thumb);
                if ($thumb.find('li').length > 0) {
                    $("#icon_no_image_" + $thumb.data('key')).css("display", "none");
                } else {
                    $("#icon_no_image_" + $thumb.data('key')).css("display", "");
                }
            });
        };
        var updateRank = function ($thumbs) {
            $.each($thumbs, function (i, thumb) {
                var $thumb = $(thumb);
                $thumb.find('li').each(function (index) {
                    $(this).find(".rank_images").remove();
                    filename = $(this).find("input[type='hidden']").val();
                    var input_name = $thumb.data('key') + 'rank_images[]';
                    $rank = $('<input type="hidden" class="rank_images" name="' + input_name + '" />');
                    $rank.val(filename + '//' + parseInt(index + 1));
                    $(this).append($rank);
                });
            });
        };

        var createId = function(name, value_index, value_key, num) {
            return name + value_index + '_' + value_key + '_' + num;
        };

        var addInputImage = function(name, value_index, value_key, num, file) {
            return $('<input type="hidden" id="' + createId(name, value_index, value_key, num) + '" value="' + file + '" name="' + name + '[' + value_key + ']['+ num +']" multiple="multiple" accept="image" style="display:none;" class="ex_file_upload">');
        };

        var deleteInputImage = function(name, value_index, value_key, num) {
            return $('#' + createId(name, value_index, value_key, num)).remove();
        };

        {# 即時系 #}
        $.each($ex_thumb, function(i, thumb) {
            var $thumb = $(thumb);
            $thumb.sortable({
                cursor: 'move',
                opacity: 0.7,
                placeholder: 'ui-state-highlight',
                update: function (event, ui) {
                    updateRank();
                }
            });
        });

        var proto_img = ''
                + '<li class="ui-state-default">'
                + '<img src="__path__" />'
                + '<a class="delete-image" data-input="__id__">'
                + '<svg class="cb cb-close">'
                + '<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#cb-close"></use>'
                + '</svg>'
                + '</a>'
                + '</li>';
        var proto_add = '<input type="hidden" id="ex_admin_product_add_images___name__" name="ex_admin_product[add_images][__name__]" required="required" class="form-control" />';
        var proto_del = '<input type="hidden" id="ex_admin_product_delete_images___name__" name="ex_admin_product[delete_images][__name__]" required="required" class="form-control" />';

        var count_add = [];
        var wk_thumb = null;

        /**
         * 保存済みの画像を表示する
         */
        {% for thumb_key, thumb_images in ex_images %}
            {% for image in thumb_images %}
                {% if (image) %}
                    wk_thumb = $('[data-value-key={{ thumb_key }}]');     
                    if (wk_thumb) {
                        var image_value = '{{ image.value }}';
                        var image_list = image_value.split(',');
                        count_add[wk_thumb.data('key')] = image_list.length > 0 ? image_list.length : 0;
                        $.each(image_list, function(i, image){
                            if (image) {
                                var proto_add_img = proto_img.replace(/__path__/g, '{{ app.config.image_save_urlpath }}/' + image);
                                var $img = $(proto_add_img.replace(/__id__/g, createId('ex_product_images', wk_thumb.data('value-index'),wk_thumb.data('value-key'), i)));
                                wk_thumb.append($img);
                            
                                /**
                                 * input要素も一緒に作っておく
                                 */
                                $('#detail_box__file_upload_' + wk_thumb.data('key')).append(
                                addInputImage('ex_product_images', wk_thumb.data('value-index'),wk_thumb.data('value-key'), i, image)
                                );
                            }
                        });
                    } else {
                        count_add[wk_thumb.data('key')] = 0;
                    }
                {% else %}
                    
                {% endif %}
            {% endfor %}
          
        {% endfor %}

        {#{% for add_image in form.add_images %}
            var $img = $(proto_img.replace(/__path__/g, '{{ app.config.image_temp_urlpath }}/{{ add_image.vars.value }}'));
            var $widget = $('{{ form_widget(add_image) }}');
            $widget.val('{{ add_image.vars.value }}');
            $ex_thumb.append($img.append($widget));
        {% endfor %}

        {% for delete_image in form.delete_images %}
            $ex_thumb.append('{{ form_widget(delete_image) }}');
        {% endfor %}#}


        hideSvg($ex_thumb);
        updateRank($ex_thumb);

        {# イベント系 #}
        {# 画像削除時 #}
        var count_del = [];
        $.each($ex_thumb, function(i, thumb){
            var $thumb = $(thumb);
            count_del[$thumb.data('key')] = 0;
            $thumb.on("click", ".delete-image", function () {
                var src = $(this).prev().attr('src')
                        .replace('{{ app.config.image_temp_urlpath }}/', '')
                        .replace('{{ app.config.image_save_urlpath }}/', '');
                /**
                 * サムネイル削除
                 */
                $(this).parent('li').remove();
                /**
                 * input削除
                 */
                $('#' + $(this).data('input')).remove();
                hideSvg([$thumb]);
                updateRank([$thumb]);

                /**
                 * POSTの追加
                 */
                $('#detail_box__file_upload_' + $thumb.data('key')).append(
                        addInputImage('ex_product_del_images', $thumb.data('value-index'),$thumb.data('value-key'), count_del[$thumb.data('key')], src)
                );

                count_del[$thumb.data('key')]++;
            });
        });

        {# 画像追加時 #}
        $.each($ex_thumb, function(i, thumb){
            var $thumb = $(thumb);
            $('#'+ $thumb.data('key')).fileupload({
                url: "{{ url('admin_product_image_add') }}",
                type: "post",
                dataType: 'json',
                dropZone: $('#drag-drop-area_' + $thumb.data('key')),
                done: function (e, data) {
                    $('#progress_' + $thumb.data('key')).hide();
                    $.each(data.result.files, function (index, file) {
                        count_add[$thumb.data('key')] = count_add[$thumb.data('key')] ? count_add[$thumb.data('key')] + 1 : 1;
                        /**
                         * サムネイルの追加
                         */
                        var path = '{{ app.config.image_temp_urlpath }}/' + file;
                        var $img = $(proto_img.replace(/__path__/g, path));
                        var $new_img = $(proto_add.replace(/__name__/g, count_add[$thumb.data('key')]));
                        $new_img.val(file);
                        $child = $img.append($new_img);
                        $thumb.append($child);

                        /**
                         * POSTの追加
                         */
                        $('#detail_box__file_upload_' + $thumb.data('key')).append(
                                addInputImage('ex_product_images', $thumb.data('value-index'),$thumb.data('value-key'), count_add[$thumb.data('key')], file)
                        );
                    });
                    hideSvg([$thumb]);
                    updateRank([$thumb]);
                },
                fail: function (e, data) {
                    alert('{{ 'アップロードに失敗しました。'|raw }}');
                },
                always: function (e, data) {
                    $('#progress_' + $thumb.data('key')).hide();
                    $('#progress_' + $thumb.data('key') + ' .progress-bar').width('0%');
                },
                start: function (e, data) {
                    $('#progress_' + $thumb.data('key')).show();
                },
                acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
                maxFileSize: 10000000,
                maxNumberOfFiles: 10,
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#progress_' + $thumb.data('key') + ' .progress-bar').css(
                            'width',
                            progress + '%'
                    );
                },
                processalways: function (e, data) {
                    if (data.files.error) {
                        alert("画像ファイルサイズが大きいか画像ファイルではありません。");
                    }
                }
            });
        });

        {# 画像アップロード #}
        $.each($ex_thumb, function(i, thumb) {
            var $thumb = $(thumb);
            $('#file_upload_' + $thumb.data('key')).on('click', function () {
                $('#' + $thumb.data('key')).click();
            });
        });

    });
</script>
